---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ $.Release.Name }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: "{{ $.Release.Name }}"
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ $.Release.Name }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ $.Release.Name }}"
subjects:
  - kind: ServiceAccount
    name: "{{ $.Release.Name }}"
    namespace: "{{ $.Release.Namespace }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $.Release.Name }}"
  labels:
    name: "{{ $.Release.Name }}"
spec:
  selector:
    matchLabels:
      name: "{{ $.Release.Name }}"
  template:
    metadata:
      name: "{{ $.Release.Name }}"
      labels:
        name: "{{ $.Release.Name }}"
      annotations:
        vault-injector.io/version: "dev"
        vault-injector.io/config: {{ .Values.config | toJson | quote }}
    spec:
      serviceAccountName: "{{ $.Release.Name }}"
      containers:
        - name: "{{ $.Release.Name }}"
          image: "quentinn42/vault-injector:dev"
          imagePullPolicy: Always
          command: ["/bin/bash"]
          args:
            - "-c"
            - 'source ./entrypoint.sh ; while true; do get_config ; sleep 1; done'
          resources:
            limits:
              cpu: 100m
              memory: 250Mi
            requests:
              cpu: 10m
              memory: 10Mi
