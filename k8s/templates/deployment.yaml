---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ $.Release.Name }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: "{{ $.Release.Name }}"
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - patch
  - apiGroups:
      - apps
    resources:
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ $.Release.Name }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ $.Release.Name }}"
subjects:
  - kind: ServiceAccount
    name: "{{ $.Release.Name }}"
    namespace: "{{ $.Release.Namespace }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $.Release.Name }}"
  labels:
    name: "{{ $.Release.Name }}"
  annotations:
    vault-injector.io/config: {{ .Values.config | toJson | quote }}
spec:
  selector:
    matchLabels:
      name: "{{ $.Release.Name }}"
  template:
    metadata:
      name: "{{ $.Release.Name }}"
      labels:
        name: "{{ $.Release.Name }}"
    spec:
      serviceAccountName: "{{ $.Release.Name }}"
      containers:
        - name: "{{ $.Release.Name }}"
          image: "alpine:latest"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args:
            - "-c"
            - 'echo "The values are A=$A - B=$B - C=$C" ; sleep 600'
          resources:
            limits:
              cpu: 100m
              memory: 250Mi
            requests:
              cpu: 10m
              memory: 10Mi
        - name: "vault-injector-init"
          image: "quentinn42/vault-injector:dev"
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: "vault"
          resources:
            limits:
              cpu: 10m
              memory: 10Mi
            requests:
              cpu: 10m
              memory: 10Mi
